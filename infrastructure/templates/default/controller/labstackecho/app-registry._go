package registry

type {{CamelCase .RegistryName}} struct {
	server.LabstackEchoHandler
	{{CamelCase .ControllerName}}Controller {{LowerCase .ControllerName}}.Controller
	// TODO Another controller will added here ... <<<<<<
}

func New{{PascalCase .RegistryName}}() func() application.RegistryContract {
	return func() application.RegistryContract {

        httpHandler, err := server.NewLabstackEchoHandler(":8080")
        if err != nil {
			log.Error(context.Background(), "%v", err.Error())
			os.Exit(1)
		}
                
        datasource, err := gateway.New{{PascalCase .GatewayName}}Gateway()
		if err != nil {
			log.Error(context.Background(), "%v", err.Error())
			os.Exit(1)
		}

        return &{{CamelCase .RegistryName}}{
            LabstackEchoHandler: httpHandler,
            {{CamelCase .ControllerName}}Controller: {{LowerCase .ControllerName}}.Controller{
                Router:              httpHandler.Router,
                {{PascalCase .UsecaseName}}Inport: {{LowerCase .UsecaseName}}.NewUsecase(datasource),
                // TODO another Inport will added here ... <<<<<<
            },
            // TODO another controller will added here ... <<<<<<
        }
	}
}

func (r *{{CamelCase .RegistryName}}) SetupController() {
	r.{{CamelCase .ControllerName}}Controller.RegisterRouter()
	// TODO another router call will added here ... <<<<<<
}

